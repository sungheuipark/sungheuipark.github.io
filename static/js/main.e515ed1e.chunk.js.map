{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Modal","props","className","style","background","color","Í∏ÄÏ†úÎ™©","title","Modal2","state","name","age","this","onClick","setState","React","Component","App","useState","Í∏ÄÏ†úÎ™©Î≥ÄÍ≤Ω","styleVal","fontSize","Îî∞Î¥â","Îî∞Î¥âÎ≥ÄÍ≤Ω","modal","setModal","setTitle","ÏûÖÎ†•Í∞í","setÏûÖÎ†•Í∞í","newArray","orderArray","sort","map","a","i","e","stopPropagation","copy","splice","onChange","target","value","console","log","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPA+EA,SAASA,EAAMC,GACb,OACI,sBAAKC,UAAU,QAAQC,MAAO,CAACC,WAAaH,EAAMI,OAAlD,UACE,6BAAMJ,EAAMK,mBAAIL,EAAMM,SACtB,6CACA,yDACA,2D,IAKFC,E,kDACJ,WAAYP,GAAO,IAAD,8BAChB,cAAMA,IACDQ,MAAQ,CACXC,KAAO,MACPC,IAAM,IAJQ,E,0CAQlB,WAAS,IAAD,OACN,OACE,gCACE,iDAAUC,KAAKH,MAAME,OACrB,wBAAQE,QAAS,WACf,EAAKC,SAAS,CAACH,IAAM,MADvB,iC,GAbaI,IAAMC,WAwBZC,EA7Gf,WAEE,MAAmBC,mBAAS,CAAC,uCAAS,qBAAM,WAA5C,mBAAKZ,EAAL,KAAUa,EAAV,KAEIC,EAAW,CAACf,MAAM,OAAQgB,SAAS,QACvC,EAAiBH,mBAAS,CAAC,EAAE,EAAE,IAA/B,mBAAKI,EAAL,KAASC,EAAT,KACA,EAAwBL,oBAAS,GAAjC,mBAAKM,EAAL,KAAYC,EAAZ,KACA,EAAwBP,mBAAS,GAAjC,mBAAKX,EAAL,KAAYmB,EAAZ,KACA,EAAoBR,mBAAS,IAA7B,mBAAKS,EAAL,KAAUC,EAAV,KAcA,OACE,sBAAK1B,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,+BAtBM,2BAsBN,wBACA,wBAAQW,QAhBd,WACE,IAAIgB,EAAQ,YAAOvB,GACnBuB,EAAS,GAAK,qBACdV,EAAMU,IAaF,0BACA,wBAAQhB,QAXd,WACE,IAAIiB,EAAU,YAAOxB,GACrBwB,EAAWC,OACXZ,EAAMW,IAQF,6BAIAxB,EAAI0B,KAAI,SAASC,EAAGC,GAClB,OACE,sBAAKhC,UAAU,OAAf,UACE,qBAAIC,MAAOiB,EAAX,UACE,sBAAMP,QAAS,WAAMY,GAAS,GAAOC,EAASQ,IAA9C,SAAqD5B,EAAI4B,KACzD,sBAAMrB,QAAS,SAACsB,GACdA,EAAEC,kBACF,IAAIC,EAAI,YAAOf,GACfe,EAAKH,GAAKG,EAAKH,GAAK,EACpBX,EAAKc,IAJP,0BAFF,IAOkBf,EAAGY,MAErB,8DACA,wBAAQrB,QAAS,WACf,IAAIwB,EAAI,YAAO/B,GACf+B,EAAKC,OAAOJ,EAAG,GACff,EAAMkB,IAHR,4BAXyBH,MAqBjC,uBAAOK,SAAU,SAACJ,GAChBP,EAAOO,EAAEK,OAAOC,OAChBC,QAAQC,IAAIhB,MAGd,wBAAQd,QAAS,WACf,IAAIwB,EAAI,YAAO/B,GACf+B,EAAKO,QAAQjB,GACbR,EAAMkB,IAHR,gCAQW,GAATb,EAAgB,cAACxB,EAAD,CAAOK,MAAM,OAAOE,MAAOA,EAAOD,qBAAKA,IAAS,KAElE,cAAC,EAAD,QC9DSuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e515ed1e.chunk.js","sourcesContent":["/* eslint-disable */\nimport './App.css';\nimport React, {useState} from 'react';\n//import reactDom from 'react-dom';\n\nfunction App() {\n\n  let [Í∏ÄÏ†úÎ™©, Í∏ÄÏ†úÎ™©Î≥ÄÍ≤Ω] = useState(['ÏûêÎ∞îÏä§ÌÅ¨Î¶ΩÌä∏','Î¶¨Ïï°Ìä∏','Î∑∞']);\n  let posts = 'Î∞ïÏÑ±Ìù¨Ïùò';\n  let styleVal = {color:'#000', fontSize:'14px'}\n  let [Îî∞Î¥â, Îî∞Î¥âÎ≥ÄÍ≤Ω] = useState([0,0,0]);\n  let [modal, setModal] = useState(false);\n  let [title, setTitle] = useState(0);\n  let [ÏûÖÎ†•Í∞í, setÏûÖÎ†•Í∞í] = useState('');\n\n  function Ï†úÎ™©Î∞îÍæ∏Í∏∞(){\n    var newArray = [...Í∏ÄÏ†úÎ™©];\n    newArray[0] = 'ÏõπÏûêÎ∞î';\n    Í∏ÄÏ†úÎ™©Î≥ÄÍ≤Ω(newArray);\n  }\n\n  function Ï†ïÎ†¨ÌïòÍ∏∞(){\n    var orderArray = [...Í∏ÄÏ†úÎ™©];\n    orderArray.sort();\n    Í∏ÄÏ†úÎ™©Î≥ÄÍ≤Ω(orderArray);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"black-nav\">\n        <h4>{posts} Í∞úÎ∞ú blog</h4>\n        <button onClick={Ï†úÎ™©Î∞îÍæ∏Í∏∞}>Î≤ÑÌäº</button>\n        <button onClick={Ï†ïÎ†¨ÌïòÍ∏∞}>Ï†ïÎ†¨</button>\n      </div>\n\n      {\n        Í∏ÄÏ†úÎ™©.map(function(a, i){\n          return (\n            <div className=\"list\" key={i}>\n              <h4 style={styleVal}>\n                <span onClick={()=>{ setModal(true); setTitle(i) }}>{Í∏ÄÏ†úÎ™©[i]}</span>\n                <span onClick={(e)=>{\n                  e.stopPropagation();\n                  let copy = [...Îî∞Î¥â];\n                  copy[i] = copy[i] + 1;\n                  Îî∞Î¥âÎ≥ÄÍ≤Ω(copy)\n                  }}>üëç</span> {Îî∞Î¥â[i]}\n              </h4>\n              <p>2Ïõî 17Ïùº Î∞úÌñâ</p>\n              <button onClick={()=>{\n                let copy = [...Í∏ÄÏ†úÎ™©];\n                copy.splice(i, 1);\n                Í∏ÄÏ†úÎ™©Î≥ÄÍ≤Ω(copy);\n              }} >ÏÇ≠Ï†ú</button>\n            </div>\n          )\n        })\n      }\n\n      <input onChange={(e)=>{\n        setÏûÖÎ†•Í∞í(e.target.value);\n        console.log(ÏûÖÎ†•Í∞í)\n      }} />\n\n      <button onClick={()=>{\n        let copy = [...Í∏ÄÏ†úÎ™©];\n        copy.unshift(ÏûÖÎ†•Í∞í);\n        Í∏ÄÏ†úÎ™©Î≥ÄÍ≤Ω(copy);\n      }}>Í∏ÄÎ∞úÌñâ</button>\n\n\n      {\n        modal == true ? <Modal color='#eee' title={title} Í∏ÄÏ†úÎ™©={Í∏ÄÏ†úÎ™©}/> : null\n      }\n      <Modal2></Modal2>\n    </div>\n  )\n}\n\nfunction Modal(props){\n  return(\n      <div className=\"modal\" style={{background : props.color}}>\n        <h4>{ props.Í∏ÄÏ†úÎ™©[props.title] }</h4>\n        <p>ÎÇ†Ïßú</p>\n        <p>ÏÉÅÏÑ∏ÎÇ¥Ïö©</p>\n        <button>Í∏ÄÏàòÏ†ï</button>\n      </div>\n  )\n}\n\nclass Modal2 extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      name : 'kim',\n      age : 20\n    }\n\n  }\n  render(){\n    return(\n      <div>\n        <span>ÏïàÎÖï {this.state.age}</span>\n        <button onClick={()=>{\n          this.setState({age : 21})\n        }}>Î≤ÑÌäº</button>\n\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}